generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model cart {
  id       Int        @id @default(autoincrement())
  userId   Int        @unique(map: "Cart_userId_key")
  status   String
  user     user       @relation(fields: [userId], references: [id], map: "Cart_userId_fkey")
  cartItems cartItem[]
}

model cartItem {
  id            Int     @id @default(autoincrement())
  cartId        Int
  productId     Int
  quantity      Int
  unitPrice     Float
  cart          cart    @relation(fields: [cartId], references: [id], map: "CartItem_cartId_fkey")
  product       product @relation(fields: [productId], references: [id], map: "CartItem_productId_fkey")

  @@index([cartId], map: "CartItem_cartId_fkey")
  @@index([productId], map: "CartItem_productId_fkey")
}

model category {
  id      Int       @id @default(autoincrement())
  name    String
  products product[]
}

model order {
  id               Int       @id @default(autoincrement())
  userId           Int
  creationDate     DateTime  @default(now())
  status           String
  total            Float
  shippingAddress  address?  @relation(fields: [shippingAddressId], references: [id])
  shippingAddressId Int?
  paymentDate      DateTime?
  user             user      @relation(fields: [userId], references: [id])
  orderItems       orderItem[]

  @@index([userId])
}


model orderItem {
  id            Int     @id @default(autoincrement())
  orderId       Int
  productId     Int
  quantity      Int
  unitPrice     Float
  order         order   @relation(fields: [orderId], references: [id], map: "OrderItem_orderId_fkey")
  product       product @relation(fields: [productId], references: [id], map: "OrderItem_productId_fkey")

  @@index([orderId], map: "OrderItem_orderId_fkey")
  @@index([productId], map: "OrderItem_productId_fkey")
}

model product {
  id              Int            @id @default(autoincrement())
  name            String
  description     String
  price           Float
  stock           Int
  categoryId      Int
  imageUrl        String?
  cartItems       cartItem[]
  orderItems      orderItem[]
  category        category       @relation(fields: [categoryId], references: [id], map: "Product_categoryId_fkey")
  stockMovements  stockMovement[]

  @@index([categoryId], map: "Product_categoryId_fkey")
}

model stockMovement {
  id         Int      @id @default(autoincrement())
  productId  Int
  quantity   Int
  type       String
  date       DateTime @default(now())
  product    product  @relation(fields: [productId], references: [id], map: "StockMovement_productId_fkey")

  @@index([productId], map: "StockMovement_productId_fkey")
}

model user {
  id          Int      @id @default(autoincrement())
  name        String
  email       String   @unique(map: "User_email_key")
  password    String
  phone       String
  creationDate DateTime @default(now())
  cart        cart?
  orders      order[]
  address     address?  @relation(fields: [addressId], references: [id], map: "User_addressId_fkey")
  addressId   Int?
}

model address {
  id       Int     @id @default(autoincrement())
  street   String
  neighborhood String
  number   String
  city     String
  state    String
  zipCode  String
  users    user[] 
  orders   order[]  
}

